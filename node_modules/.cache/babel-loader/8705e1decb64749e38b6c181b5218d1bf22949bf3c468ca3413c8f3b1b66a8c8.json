{"ast":null,"code":"import _objectSpread from\"C:/Users/asus/OneDrive/Desktop/Gen z/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";// Mock API Service\n// This file provides mock implementations of API calls for development\nimport{products}from'../data/products';import{mockApiResponse,MOCK_CONFIG}from'../config/mockMode';// Mock user data\nconst mockUsers=[{id:1,email:'user@example.com',name:'John Doe',avatar:'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=150&h=150&fit=crop&crop=face',created_at:'2024-01-01T00:00:00Z'}];// Mock cart data\nlet mockCart={items:[],total:0,item_count:0};// Mock orders data\nlet mockOrders=[{id:1,user_id:1,status:'completed',total:95,items:[{product_id:3,quantity:1,price:95,name:'Fossil Grant'}],shipping_address:{street:'123 Main St',city:'New York',state:'NY',zip:'10001',country:'USA'},created_at:'2024-01-15T10:30:00Z',updated_at:'2024-01-15T10:30:00Z'}];// Mock wishlist data\nlet mockWishlist=[{id:1,product_id:1,user_id:1,created_at:'2024-01-01T00:00:00Z'},{id:2,product_id:4,user_id:1,created_at:'2024-01-02T00:00:00Z'}];// Mock notifications data\nlet mockNotifications=[{id:1,user_id:1,title:'Welcome to Gen Z Store!',message:'Thank you for joining our premium collection.',type:'welcome',read:false,created_at:'2024-01-01T00:00:00Z'},{id:2,user_id:1,title:'Order Shipped',message:'Your order #1 has been shipped and is on its way.',type:'order',read:false,created_at:'2024-01-16T09:00:00Z'}];// ===========================================\n// MOCK PRODUCTS API\n// ===========================================\nexport const mockGetProducts=async function(){let filters=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};let filteredProducts=[...products];// Apply filters\nif(filters.category&&filters.category!=='all'){filteredProducts=filteredProducts.filter(p=>p.category===filters.category);}if(filters.search){const searchTerm=filters.search.toLowerCase();filteredProducts=filteredProducts.filter(p=>p.name.toLowerCase().includes(searchTerm)||p.description.toLowerCase().includes(searchTerm));}if(filters.price_min){filteredProducts=filteredProducts.filter(p=>p.price>=filters.price_min);}if(filters.price_max){filteredProducts=filteredProducts.filter(p=>p.price<=filters.price_max);}return mockApiResponse({products:filteredProducts,total:filteredProducts.length,page:1,limit:20});};export const mockGetProductById=async productId=>{const product=products.find(p=>p.id===parseInt(productId));if(!product){throw new Error('Product not found');}return mockApiResponse(product);};export const mockGetFeaturedProducts=async function(){let limit=arguments.length>0&&arguments[0]!==undefined?arguments[0]:8;const featured=products.slice(0,limit);return mockApiResponse(featured);};export const mockGetProductReviews=async productId=>{const reviews=[{id:1,product_id:parseInt(productId),user_id:1,rating:5,comment:'Excellent product! Highly recommended.',created_at:'2024-01-10T00:00:00Z'},{id:2,product_id:parseInt(productId),user_id:2,rating:4,comment:'Good quality, fast shipping.',created_at:'2024-01-12T00:00:00Z'}];return mockApiResponse(reviews);};export const mockAddProductReview=async(productId,reviewData)=>{const newReview=_objectSpread(_objectSpread({id:Date.now(),product_id:parseInt(productId),user_id:1},reviewData),{},{created_at:new Date().toISOString()});return mockApiResponse(newReview);};// ===========================================\n// MOCK CART API\n// ===========================================\nexport const mockGetCart=async()=>{return mockApiResponse(mockCart);};export const mockAddToCart=async itemData=>{const existingItem=mockCart.items.find(item=>item.product_id===itemData.product_id);if(existingItem){existingItem.quantity+=itemData.quantity||1;}else{const product=products.find(p=>p.id===itemData.product_id);mockCart.items.push({id:Date.now(),product_id:itemData.product_id,quantity:itemData.quantity||1,price:itemData.price||(product===null||product===void 0?void 0:product.price)||0,name:(product===null||product===void 0?void 0:product.name)||'Unknown Product'});}// Update totals\nmockCart.item_count=mockCart.items.reduce((sum,item)=>sum+item.quantity,0);mockCart.total=mockCart.items.reduce((sum,item)=>sum+item.price*item.quantity,0);return mockApiResponse(mockCart);};export const mockUpdateCartItem=async(itemId,quantity)=>{const item=mockCart.items.find(item=>item.id===parseInt(itemId));if(!item){throw new Error('Cart item not found');}item.quantity=quantity;// Update totals\nmockCart.item_count=mockCart.items.reduce((sum,item)=>sum+item.quantity,0);mockCart.total=mockCart.items.reduce((sum,item)=>sum+item.price*item.quantity,0);return mockApiResponse(mockCart);};export const mockRemoveFromCart=async itemId=>{mockCart.items=mockCart.items.filter(item=>item.id!==parseInt(itemId));// Update totals\nmockCart.item_count=mockCart.items.reduce((sum,item)=>sum+item.quantity,0);mockCart.total=mockCart.items.reduce((sum,item)=>sum+item.price*item.quantity,0);return mockApiResponse(mockCart);};export const mockClearCart=async()=>{mockCart={items:[],total:0,item_count:0};return mockApiResponse(mockCart);};// ===========================================\n// MOCK AUTH API\n// ===========================================\nexport const mockLoginUser=async credentials=>{const user=mockUsers.find(u=>u.email===credentials.email);if(!user||credentials.password!=='password'){throw new Error('Invalid credentials');}const token='mock-jwt-token-'+Date.now();return mockApiResponse({user,token,expires_in:86400});};export const mockRegisterUser=async userData=>{const newUser=_objectSpread(_objectSpread({id:Date.now()},userData),{},{created_at:new Date().toISOString()});mockUsers.push(newUser);const token='mock-jwt-token-'+Date.now();return mockApiResponse({user:newUser,token,expires_in:86400});};export const mockLogoutUser=async()=>{return mockApiResponse({message:'Logged out successfully'});};export const mockGetCurrentUser=async()=>{return mockApiResponse(mockUsers[0]);};export const mockUpdateUserProfile=async profileData=>{const updatedUser=_objectSpread(_objectSpread({},mockUsers[0]),profileData);mockUsers[0]=updatedUser;return mockApiResponse(updatedUser);};export const mockChangePassword=async passwordData=>{return mockApiResponse({message:'Password changed successfully'});};// ===========================================\n// MOCK ORDERS API\n// ===========================================\nexport const mockGetOrders=async function(){let filters=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};let filteredOrders=[...mockOrders];if(filters.status){filteredOrders=filteredOrders.filter(order=>order.status===filters.status);}return mockApiResponse(filteredOrders);};export const mockGetOrderById=async orderId=>{const order=mockOrders.find(o=>o.id===parseInt(orderId));if(!order){throw new Error('Order not found');}return mockApiResponse(order);};export const mockCreateOrder=async orderData=>{const newOrder=_objectSpread(_objectSpread({id:Date.now(),user_id:1,status:'pending'},orderData),{},{created_at:new Date().toISOString(),updated_at:new Date().toISOString()});mockOrders.push(newOrder);// Clear cart after order creation\nmockCart={items:[],total:0,item_count:0};return mockApiResponse(newOrder);};export const mockUpdateOrderStatus=async(orderId,status)=>{const order=mockOrders.find(o=>o.id===parseInt(orderId));if(!order){throw new Error('Order not found');}order.status=status;order.updated_at=new Date().toISOString();return mockApiResponse(order);};// ===========================================\n// MOCK WISHLIST API\n// ===========================================\nexport const mockGetWishlist=async()=>{const wishlistItems=mockWishlist.map(item=>{const product=products.find(p=>p.id===item.product_id);return _objectSpread(_objectSpread({},item),{},{product:product||null});});return mockApiResponse(wishlistItems);};export const mockAddToWishlist=async productId=>{const existingItem=mockWishlist.find(item=>item.product_id===parseInt(productId));if(existingItem){return mockApiResponse(existingItem);}const newItem={id:Date.now(),product_id:parseInt(productId),user_id:1,created_at:new Date().toISOString()};mockWishlist.push(newItem);return mockApiResponse(newItem);};export const mockRemoveFromWishlist=async productId=>{mockWishlist=mockWishlist.filter(item=>item.product_id!==parseInt(productId));return mockApiResponse({message:'Item removed from wishlist'});};// ===========================================\n// MOCK NOTIFICATIONS API\n// ===========================================\nexport const mockGetNotifications=async function(){let filters=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};let filteredNotifications=[...mockNotifications];if(filters.unread_only){filteredNotifications=filteredNotifications.filter(n=>!n.read);}return mockApiResponse(filteredNotifications);};export const mockMarkNotificationAsRead=async notificationId=>{const notification=mockNotifications.find(n=>n.id===parseInt(notificationId));if(notification){notification.read=true;}return mockApiResponse(notification);};export const mockMarkAllNotificationsAsRead=async()=>{mockNotifications.forEach(notification=>{notification.read=true;});return mockApiResponse({message:'All notifications marked as read'});};// ===========================================\n// MOCK PAYMENTS API\n// ===========================================\nexport const mockProcessPayment=async paymentData=>{const paymentResult={id:'mock-payment-'+Date.now(),status:'succeeded',amount:paymentData.amount,currency:'USD',payment_method:paymentData.payment_method,created_at:new Date().toISOString()};return mockApiResponse(paymentResult);};export const mockGetPaymentMethods=async()=>{const methods=[{id:'card',name:'Credit Card',type:'card'},{id:'paypal',name:'PayPal',type:'paypal'},{id:'apple_pay',name:'Apple Pay',type:'wallet'}];return mockApiResponse(methods);};export const mockGetPaymentHistory=async function(){let filters=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const payments=[{id:'mock-payment-1',amount:95,currency:'USD',status:'succeeded',payment_method:'card',created_at:'2024-01-15T10:30:00Z'}];return mockApiResponse(payments);};// ===========================================\n// MOCK ANALYTICS API\n// ===========================================\nexport const mockGetProductAnalytics=async function(){let filters=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const analytics={total_products:products.length,total_views:1250,total_sales:45,revenue:12500,top_products:products.slice(0,5).map(p=>({id:p.id,name:p.name,views:Math.floor(Math.random()*100),sales:Math.floor(Math.random()*20)}))};return mockApiResponse(analytics);};export const mockGetSalesStatistics=async function(){let filters=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const statistics={total_orders:mockOrders.length,total_revenue:mockOrders.reduce((sum,order)=>sum+order.total,0),average_order_value:mockOrders.reduce((sum,order)=>sum+order.total,0)/mockOrders.length,orders_by_status:{pending:mockOrders.filter(o=>o.status==='pending').length,completed:mockOrders.filter(o=>o.status==='completed').length,cancelled:mockOrders.filter(o=>o.status==='cancelled').length}};return mockApiResponse(statistics);};","map":{"version":3,"names":["products","mockApiResponse","MOCK_CONFIG","mockUsers","id","email","name","avatar","created_at","mockCart","items","total","item_count","mockOrders","user_id","status","product_id","quantity","price","shipping_address","street","city","state","zip","country","updated_at","mockWishlist","mockNotifications","title","message","type","read","mockGetProducts","filters","arguments","length","undefined","filteredProducts","category","filter","p","search","searchTerm","toLowerCase","includes","description","price_min","price_max","page","limit","mockGetProductById","productId","product","find","parseInt","Error","mockGetFeaturedProducts","featured","slice","mockGetProductReviews","reviews","rating","comment","mockAddProductReview","reviewData","newReview","_objectSpread","Date","now","toISOString","mockGetCart","mockAddToCart","itemData","existingItem","item","push","reduce","sum","mockUpdateCartItem","itemId","mockRemoveFromCart","mockClearCart","mockLoginUser","credentials","user","u","password","token","expires_in","mockRegisterUser","userData","newUser","mockLogoutUser","mockGetCurrentUser","mockUpdateUserProfile","profileData","updatedUser","mockChangePassword","passwordData","mockGetOrders","filteredOrders","order","mockGetOrderById","orderId","o","mockCreateOrder","orderData","newOrder","mockUpdateOrderStatus","mockGetWishlist","wishlistItems","map","mockAddToWishlist","newItem","mockRemoveFromWishlist","mockGetNotifications","filteredNotifications","unread_only","n","mockMarkNotificationAsRead","notificationId","notification","mockMarkAllNotificationsAsRead","forEach","mockProcessPayment","paymentData","paymentResult","amount","currency","payment_method","mockGetPaymentMethods","methods","mockGetPaymentHistory","payments","mockGetProductAnalytics","analytics","total_products","total_views","total_sales","revenue","top_products","views","Math","floor","random","sales","mockGetSalesStatistics","statistics","total_orders","total_revenue","average_order_value","orders_by_status","pending","completed","cancelled"],"sources":["C:/Users/asus/OneDrive/Desktop/Gen z/src/services/mockApi.js"],"sourcesContent":["// Mock API Service\r\n// This file provides mock implementations of API calls for development\r\n\r\nimport { products } from '../data/products';\r\nimport { mockApiResponse, MOCK_CONFIG } from '../config/mockMode';\r\n\r\n// Mock user data\r\nconst mockUsers = [\r\n  {\r\n    id: 1,\r\n    email: 'user@example.com',\r\n    name: 'John Doe',\r\n    avatar: 'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=150&h=150&fit=crop&crop=face',\r\n    created_at: '2024-01-01T00:00:00Z'\r\n  }\r\n];\r\n\r\n// Mock cart data\r\nlet mockCart = {\r\n  items: [],\r\n  total: 0,\r\n  item_count: 0\r\n};\r\n\r\n// Mock orders data\r\nlet mockOrders = [\r\n  {\r\n    id: 1,\r\n    user_id: 1,\r\n    status: 'completed',\r\n    total: 95,\r\n    items: [\r\n      { product_id: 3, quantity: 1, price: 95, name: 'Fossil Grant' }\r\n    ],\r\n    shipping_address: {\r\n      street: '123 Main St',\r\n      city: 'New York',\r\n      state: 'NY',\r\n      zip: '10001',\r\n      country: 'USA'\r\n    },\r\n    created_at: '2024-01-15T10:30:00Z',\r\n    updated_at: '2024-01-15T10:30:00Z'\r\n  }\r\n];\r\n\r\n// Mock wishlist data\r\nlet mockWishlist = [\r\n  { id: 1, product_id: 1, user_id: 1, created_at: '2024-01-01T00:00:00Z' },\r\n  { id: 2, product_id: 4, user_id: 1, created_at: '2024-01-02T00:00:00Z' }\r\n];\r\n\r\n// Mock notifications data\r\nlet mockNotifications = [\r\n  {\r\n    id: 1,\r\n    user_id: 1,\r\n    title: 'Welcome to Gen Z Store!',\r\n    message: 'Thank you for joining our premium collection.',\r\n    type: 'welcome',\r\n    read: false,\r\n    created_at: '2024-01-01T00:00:00Z'\r\n  },\r\n  {\r\n    id: 2,\r\n    user_id: 1,\r\n    title: 'Order Shipped',\r\n    message: 'Your order #1 has been shipped and is on its way.',\r\n    type: 'order',\r\n    read: false,\r\n    created_at: '2024-01-16T09:00:00Z'\r\n  }\r\n];\r\n\r\n// ===========================================\r\n// MOCK PRODUCTS API\r\n// ===========================================\r\n\r\nexport const mockGetProducts = async (filters = {}) => {\r\n  let filteredProducts = [...products];\r\n  \r\n  // Apply filters\r\n  if (filters.category && filters.category !== 'all') {\r\n    filteredProducts = filteredProducts.filter(p => p.category === filters.category);\r\n  }\r\n  \r\n  if (filters.search) {\r\n    const searchTerm = filters.search.toLowerCase();\r\n    filteredProducts = filteredProducts.filter(p => \r\n      p.name.toLowerCase().includes(searchTerm) ||\r\n      p.description.toLowerCase().includes(searchTerm)\r\n    );\r\n  }\r\n  \r\n  if (filters.price_min) {\r\n    filteredProducts = filteredProducts.filter(p => p.price >= filters.price_min);\r\n  }\r\n  \r\n  if (filters.price_max) {\r\n    filteredProducts = filteredProducts.filter(p => p.price <= filters.price_max);\r\n  }\r\n  \r\n  return mockApiResponse({\r\n    products: filteredProducts,\r\n    total: filteredProducts.length,\r\n    page: 1,\r\n    limit: 20\r\n  });\r\n};\r\n\r\nexport const mockGetProductById = async (productId) => {\r\n  const product = products.find(p => p.id === parseInt(productId));\r\n  \r\n  if (!product) {\r\n    throw new Error('Product not found');\r\n  }\r\n  \r\n  return mockApiResponse(product);\r\n};\r\n\r\nexport const mockGetFeaturedProducts = async (limit = 8) => {\r\n  const featured = products.slice(0, limit);\r\n  return mockApiResponse(featured);\r\n};\r\n\r\nexport const mockGetProductReviews = async (productId) => {\r\n  const reviews = [\r\n    {\r\n      id: 1,\r\n      product_id: parseInt(productId),\r\n      user_id: 1,\r\n      rating: 5,\r\n      comment: 'Excellent product! Highly recommended.',\r\n      created_at: '2024-01-10T00:00:00Z'\r\n    },\r\n    {\r\n      id: 2,\r\n      product_id: parseInt(productId),\r\n      user_id: 2,\r\n      rating: 4,\r\n      comment: 'Good quality, fast shipping.',\r\n      created_at: '2024-01-12T00:00:00Z'\r\n    }\r\n  ];\r\n  \r\n  return mockApiResponse(reviews);\r\n};\r\n\r\nexport const mockAddProductReview = async (productId, reviewData) => {\r\n  const newReview = {\r\n    id: Date.now(),\r\n    product_id: parseInt(productId),\r\n    user_id: 1,\r\n    ...reviewData,\r\n    created_at: new Date().toISOString()\r\n  };\r\n  \r\n  return mockApiResponse(newReview);\r\n};\r\n\r\n// ===========================================\r\n// MOCK CART API\r\n// ===========================================\r\n\r\nexport const mockGetCart = async () => {\r\n  return mockApiResponse(mockCart);\r\n};\r\n\r\nexport const mockAddToCart = async (itemData) => {\r\n  const existingItem = mockCart.items.find(item => item.product_id === itemData.product_id);\r\n  \r\n  if (existingItem) {\r\n    existingItem.quantity += itemData.quantity || 1;\r\n  } else {\r\n    const product = products.find(p => p.id === itemData.product_id);\r\n    mockCart.items.push({\r\n      id: Date.now(),\r\n      product_id: itemData.product_id,\r\n      quantity: itemData.quantity || 1,\r\n      price: itemData.price || product?.price || 0,\r\n      name: product?.name || 'Unknown Product'\r\n    });\r\n  }\r\n  \r\n  // Update totals\r\n  mockCart.item_count = mockCart.items.reduce((sum, item) => sum + item.quantity, 0);\r\n  mockCart.total = mockCart.items.reduce((sum, item) => sum + (item.price * item.quantity), 0);\r\n  \r\n  return mockApiResponse(mockCart);\r\n};\r\n\r\nexport const mockUpdateCartItem = async (itemId, quantity) => {\r\n  const item = mockCart.items.find(item => item.id === parseInt(itemId));\r\n  \r\n  if (!item) {\r\n    throw new Error('Cart item not found');\r\n  }\r\n  \r\n  item.quantity = quantity;\r\n  \r\n  // Update totals\r\n  mockCart.item_count = mockCart.items.reduce((sum, item) => sum + item.quantity, 0);\r\n  mockCart.total = mockCart.items.reduce((sum, item) => sum + (item.price * item.quantity), 0);\r\n  \r\n  return mockApiResponse(mockCart);\r\n};\r\n\r\nexport const mockRemoveFromCart = async (itemId) => {\r\n  mockCart.items = mockCart.items.filter(item => item.id !== parseInt(itemId));\r\n  \r\n  // Update totals\r\n  mockCart.item_count = mockCart.items.reduce((sum, item) => sum + item.quantity, 0);\r\n  mockCart.total = mockCart.items.reduce((sum, item) => sum + (item.price * item.quantity), 0);\r\n  \r\n  return mockApiResponse(mockCart);\r\n};\r\n\r\nexport const mockClearCart = async () => {\r\n  mockCart = { items: [], total: 0, item_count: 0 };\r\n  return mockApiResponse(mockCart);\r\n};\r\n\r\n// ===========================================\r\n// MOCK AUTH API\r\n// ===========================================\r\n\r\nexport const mockLoginUser = async (credentials) => {\r\n  const user = mockUsers.find(u => u.email === credentials.email);\r\n  \r\n  if (!user || credentials.password !== 'password') {\r\n    throw new Error('Invalid credentials');\r\n  }\r\n  \r\n  const token = 'mock-jwt-token-' + Date.now();\r\n  \r\n  return mockApiResponse({\r\n    user,\r\n    token,\r\n    expires_in: 86400\r\n  });\r\n};\r\n\r\nexport const mockRegisterUser = async (userData) => {\r\n  const newUser = {\r\n    id: Date.now(),\r\n    ...userData,\r\n    created_at: new Date().toISOString()\r\n  };\r\n  \r\n  mockUsers.push(newUser);\r\n  \r\n  const token = 'mock-jwt-token-' + Date.now();\r\n  \r\n  return mockApiResponse({\r\n    user: newUser,\r\n    token,\r\n    expires_in: 86400\r\n  });\r\n};\r\n\r\nexport const mockLogoutUser = async () => {\r\n  return mockApiResponse({ message: 'Logged out successfully' });\r\n};\r\n\r\nexport const mockGetCurrentUser = async () => {\r\n  return mockApiResponse(mockUsers[0]);\r\n};\r\n\r\nexport const mockUpdateUserProfile = async (profileData) => {\r\n  const updatedUser = { ...mockUsers[0], ...profileData };\r\n  mockUsers[0] = updatedUser;\r\n  \r\n  return mockApiResponse(updatedUser);\r\n};\r\n\r\nexport const mockChangePassword = async (passwordData) => {\r\n  return mockApiResponse({ message: 'Password changed successfully' });\r\n};\r\n\r\n// ===========================================\r\n// MOCK ORDERS API\r\n// ===========================================\r\n\r\nexport const mockGetOrders = async (filters = {}) => {\r\n  let filteredOrders = [...mockOrders];\r\n  \r\n  if (filters.status) {\r\n    filteredOrders = filteredOrders.filter(order => order.status === filters.status);\r\n  }\r\n  \r\n  return mockApiResponse(filteredOrders);\r\n};\r\n\r\nexport const mockGetOrderById = async (orderId) => {\r\n  const order = mockOrders.find(o => o.id === parseInt(orderId));\r\n  \r\n  if (!order) {\r\n    throw new Error('Order not found');\r\n  }\r\n  \r\n  return mockApiResponse(order);\r\n};\r\n\r\nexport const mockCreateOrder = async (orderData) => {\r\n  const newOrder = {\r\n    id: Date.now(),\r\n    user_id: 1,\r\n    status: 'pending',\r\n    ...orderData,\r\n    created_at: new Date().toISOString(),\r\n    updated_at: new Date().toISOString()\r\n  };\r\n  \r\n  mockOrders.push(newOrder);\r\n  \r\n  // Clear cart after order creation\r\n  mockCart = { items: [], total: 0, item_count: 0 };\r\n  \r\n  return mockApiResponse(newOrder);\r\n};\r\n\r\nexport const mockUpdateOrderStatus = async (orderId, status) => {\r\n  const order = mockOrders.find(o => o.id === parseInt(orderId));\r\n  \r\n  if (!order) {\r\n    throw new Error('Order not found');\r\n  }\r\n  \r\n  order.status = status;\r\n  order.updated_at = new Date().toISOString();\r\n  \r\n  return mockApiResponse(order);\r\n};\r\n\r\n// ===========================================\r\n// MOCK WISHLIST API\r\n// ===========================================\r\n\r\nexport const mockGetWishlist = async () => {\r\n  const wishlistItems = mockWishlist.map(item => {\r\n    const product = products.find(p => p.id === item.product_id);\r\n    return {\r\n      ...item,\r\n      product: product || null\r\n    };\r\n  });\r\n  \r\n  return mockApiResponse(wishlistItems);\r\n};\r\n\r\nexport const mockAddToWishlist = async (productId) => {\r\n  const existingItem = mockWishlist.find(item => item.product_id === parseInt(productId));\r\n  \r\n  if (existingItem) {\r\n    return mockApiResponse(existingItem);\r\n  }\r\n  \r\n  const newItem = {\r\n    id: Date.now(),\r\n    product_id: parseInt(productId),\r\n    user_id: 1,\r\n    created_at: new Date().toISOString()\r\n  };\r\n  \r\n  mockWishlist.push(newItem);\r\n  \r\n  return mockApiResponse(newItem);\r\n};\r\n\r\nexport const mockRemoveFromWishlist = async (productId) => {\r\n  mockWishlist = mockWishlist.filter(item => item.product_id !== parseInt(productId));\r\n  \r\n  return mockApiResponse({ message: 'Item removed from wishlist' });\r\n};\r\n\r\n// ===========================================\r\n// MOCK NOTIFICATIONS API\r\n// ===========================================\r\n\r\nexport const mockGetNotifications = async (filters = {}) => {\r\n  let filteredNotifications = [...mockNotifications];\r\n  \r\n  if (filters.unread_only) {\r\n    filteredNotifications = filteredNotifications.filter(n => !n.read);\r\n  }\r\n  \r\n  return mockApiResponse(filteredNotifications);\r\n};\r\n\r\nexport const mockMarkNotificationAsRead = async (notificationId) => {\r\n  const notification = mockNotifications.find(n => n.id === parseInt(notificationId));\r\n  \r\n  if (notification) {\r\n    notification.read = true;\r\n  }\r\n  \r\n  return mockApiResponse(notification);\r\n};\r\n\r\nexport const mockMarkAllNotificationsAsRead = async () => {\r\n  mockNotifications.forEach(notification => {\r\n    notification.read = true;\r\n  });\r\n  \r\n  return mockApiResponse({ message: 'All notifications marked as read' });\r\n};\r\n\r\n// ===========================================\r\n// MOCK PAYMENTS API\r\n// ===========================================\r\n\r\nexport const mockProcessPayment = async (paymentData) => {\r\n  const paymentResult = {\r\n    id: 'mock-payment-' + Date.now(),\r\n    status: 'succeeded',\r\n    amount: paymentData.amount,\r\n    currency: 'USD',\r\n    payment_method: paymentData.payment_method,\r\n    created_at: new Date().toISOString()\r\n  };\r\n  \r\n  return mockApiResponse(paymentResult);\r\n};\r\n\r\nexport const mockGetPaymentMethods = async () => {\r\n  const methods = [\r\n    { id: 'card', name: 'Credit Card', type: 'card' },\r\n    { id: 'paypal', name: 'PayPal', type: 'paypal' },\r\n    { id: 'apple_pay', name: 'Apple Pay', type: 'wallet' }\r\n  ];\r\n  \r\n  return mockApiResponse(methods);\r\n};\r\n\r\nexport const mockGetPaymentHistory = async (filters = {}) => {\r\n  const payments = [\r\n    {\r\n      id: 'mock-payment-1',\r\n      amount: 95,\r\n      currency: 'USD',\r\n      status: 'succeeded',\r\n      payment_method: 'card',\r\n      created_at: '2024-01-15T10:30:00Z'\r\n    }\r\n  ];\r\n  \r\n  return mockApiResponse(payments);\r\n};\r\n\r\n// ===========================================\r\n// MOCK ANALYTICS API\r\n// ===========================================\r\n\r\nexport const mockGetProductAnalytics = async (filters = {}) => {\r\n  const analytics = {\r\n    total_products: products.length,\r\n    total_views: 1250,\r\n    total_sales: 45,\r\n    revenue: 12500,\r\n    top_products: products.slice(0, 5).map(p => ({\r\n      id: p.id,\r\n      name: p.name,\r\n      views: Math.floor(Math.random() * 100),\r\n      sales: Math.floor(Math.random() * 20)\r\n    }))\r\n  };\r\n  \r\n  return mockApiResponse(analytics);\r\n};\r\n\r\nexport const mockGetSalesStatistics = async (filters = {}) => {\r\n  const statistics = {\r\n    total_orders: mockOrders.length,\r\n    total_revenue: mockOrders.reduce((sum, order) => sum + order.total, 0),\r\n    average_order_value: mockOrders.reduce((sum, order) => sum + order.total, 0) / mockOrders.length,\r\n    orders_by_status: {\r\n      pending: mockOrders.filter(o => o.status === 'pending').length,\r\n      completed: mockOrders.filter(o => o.status === 'completed').length,\r\n      cancelled: mockOrders.filter(o => o.status === 'cancelled').length\r\n    }\r\n  };\r\n  \r\n  return mockApiResponse(statistics);\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}