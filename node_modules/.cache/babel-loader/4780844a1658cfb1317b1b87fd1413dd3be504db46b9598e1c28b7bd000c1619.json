{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asus\\\\OneDrive\\\\Desktop\\\\Gen z\\\\src\\\\context\\\\ThemeContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext();\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s();\n  useEffect(() => {\n    // Force dark mode always\n    document.documentElement.classList.add('dark');\n    localStorage.setItem('theme', 'dark');\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {},\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeProvider, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = ThemeProvider;\nexport const useTheme = () => {\n  _s2();\n  const context = useContext(ThemeContext);\n  if (!context) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};\n_s2(useTheme, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","jsxDEV","_jsxDEV","ThemeContext","ThemeProvider","children","_s","document","documentElement","classList","add","localStorage","setItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useTheme","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/asus/OneDrive/Desktop/Gen z/src/context/ThemeContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect } from 'react';\r\n\r\nconst ThemeContext = createContext();\r\n\r\nexport const ThemeProvider = ({ children }) => {\r\n  useEffect(() => {\r\n    // Force dark mode always\r\n    document.documentElement.classList.add('dark');\r\n    localStorage.setItem('theme', 'dark');\r\n  }, []);\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{}}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useTheme = () => {\r\n  const context = useContext(ThemeContext);\r\n  if (!context) {\r\n    throw new Error('useTheme must be used within a ThemeProvider');\r\n  }\r\n  return context;\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpE,MAAMC,YAAY,gBAAGL,aAAa,CAAC,CAAC;AAEpC,OAAO,MAAMM,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7CN,SAAS,CAAC,MAAM;IACd;IACAO,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC;IAC9CC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC;EACvC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEV,OAAA,CAACC,YAAY,CAACU,QAAQ;IAACC,KAAK,EAAE,CAAC,CAAE;IAAAT,QAAA,EAC9BA;EAAQ;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAACZ,EAAA,CAZWF,aAAa;AAAAe,EAAA,GAAbf,aAAa;AAc1B,OAAO,MAAMgB,QAAQ,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC5B,MAAMC,OAAO,GAAGvB,UAAU,CAACI,YAAY,CAAC;EACxC,IAAI,CAACmB,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,8CAA8C,CAAC;EACjE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,QAAQ;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}