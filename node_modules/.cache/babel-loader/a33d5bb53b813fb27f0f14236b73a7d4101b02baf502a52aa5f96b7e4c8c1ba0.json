{"ast":null,"code":"import _objectSpread from\"C:/Users/asus/OneDrive/Desktop/Gen z/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useContext,useReducer}from'react';import{useToast}from'./ToastContext';// TODO: Uncomment when API is ready\n// import { \n//   getCart, \n//   addToCart as addToCartAPI, \n//   updateCartItem, \n//   removeFromCart as removeFromCartAPI, \n//   clearCart as clearCartAPI,\n//   handleApiError \n// } from '../services/api';\nimport{jsx as _jsx}from\"react/jsx-runtime\";const CartContext=/*#__PURE__*/createContext();const cartReducer=(state,action)=>{switch(action.type){case'ADD_TO_CART':const existingItem=state.items.find(item=>item.id===action.payload.id);if(existingItem){return _objectSpread(_objectSpread({},state),{},{items:state.items.map(item=>item.id===action.payload.id?_objectSpread(_objectSpread({},item),{},{quantity:item.quantity+1}):item)});}return _objectSpread(_objectSpread({},state),{},{items:[...state.items,_objectSpread(_objectSpread({},action.payload),{},{quantity:1})]});case'REMOVE_FROM_CART':return _objectSpread(_objectSpread({},state),{},{items:state.items.filter(item=>item.id!==action.payload)});case'UPDATE_QUANTITY':return _objectSpread(_objectSpread({},state),{},{items:state.items.map(item=>item.id===action.payload.id?_objectSpread(_objectSpread({},item),{},{quantity:action.payload.quantity}):item).filter(item=>item.quantity>0)});case'CLEAR_CART':return _objectSpread(_objectSpread({},state),{},{items:[]});default:return state;}};export const CartProvider=_ref=>{let{children}=_ref;const[state,dispatch]=useReducer(cartReducer,{items:[]});const{addToast}=useToast();// Using mock data instead of API calls\n// TODO: Replace with API calls when backend is ready\n/**\r\n   * Add product to cart (Mock implementation)\r\n   * @param {Object} product - Product to add\r\n   */const addToCart=product=>{dispatch({type:'ADD_TO_CART',payload:product});addToast(\"\".concat(product.name,\" added to cart\"),'success');};/**\r\n   * Remove product from cart (Mock implementation)\r\n   * @param {string|number} productId - Product ID to remove\r\n   */const removeFromCart=productId=>{const item=state.items.find(item=>item.id===productId);dispatch({type:'REMOVE_FROM_CART',payload:productId});if(item){addToast(\"\".concat(item.name,\" removed from cart\"),'error');}};/**\r\n   * Update product quantity in cart (Mock implementation)\r\n   * @param {string|number} productId - Product ID\r\n   * @param {number} quantity - New quantity\r\n   */const updateQuantity=(productId,quantity)=>{dispatch({type:'UPDATE_QUANTITY',payload:{id:productId,quantity}});};/**\r\n   * Clear entire cart (Mock implementation)\r\n   */const clearCart=()=>{dispatch({type:'CLEAR_CART'});addToast('Cart cleared','error');};const getTotalPrice=()=>{return state.items.reduce((total,item)=>total+item.price*item.quantity,0);};const getTotalItems=()=>{return state.items.reduce((total,item)=>total+item.quantity,0);};return/*#__PURE__*/_jsx(CartContext.Provider,{value:{items:state.items,addToCart,removeFromCart,updateQuantity,clearCart,getTotalPrice,getTotalItems},children:children});};export const useCart=()=>{const context=useContext(CartContext);if(!context){throw new Error('useCart must be used within a CartProvider');}return context;};","map":{"version":3,"names":["React","createContext","useContext","useReducer","useToast","jsx","_jsx","CartContext","cartReducer","state","action","type","existingItem","items","find","item","id","payload","_objectSpread","map","quantity","filter","CartProvider","_ref","children","dispatch","addToast","addToCart","product","concat","name","removeFromCart","productId","updateQuantity","clearCart","getTotalPrice","reduce","total","price","getTotalItems","Provider","value","useCart","context","Error"],"sources":["C:/Users/asus/OneDrive/Desktop/Gen z/src/context/CartContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer } from 'react';\r\nimport { useToast } from './ToastContext';\r\n// TODO: Uncomment when API is ready\r\n// import { \r\n//   getCart, \r\n//   addToCart as addToCartAPI, \r\n//   updateCartItem, \r\n//   removeFromCart as removeFromCartAPI, \r\n//   clearCart as clearCartAPI,\r\n//   handleApiError \r\n// } from '../services/api';\r\n\r\nconst CartContext = createContext();\r\n\r\nconst cartReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'ADD_TO_CART':\r\n      const existingItem = state.items.find(item => item.id === action.payload.id);\r\n      if (existingItem) {\r\n        return {\r\n          ...state,\r\n          items: state.items.map(item =>\r\n            item.id === action.payload.id\r\n              ? { ...item, quantity: item.quantity + 1 }\r\n              : item\r\n          )\r\n        };\r\n      }\r\n      return {\r\n        ...state,\r\n        items: [...state.items, { ...action.payload, quantity: 1 }]\r\n      };\r\n    \r\n    case 'REMOVE_FROM_CART':\r\n      return {\r\n        ...state,\r\n        items: state.items.filter(item => item.id !== action.payload)\r\n      };\r\n    \r\n    case 'UPDATE_QUANTITY':\r\n      return {\r\n        ...state,\r\n        items: state.items.map(item =>\r\n          item.id === action.payload.id\r\n            ? { ...item, quantity: action.payload.quantity }\r\n            : item\r\n        ).filter(item => item.quantity > 0)\r\n      };\r\n    \r\n    case 'CLEAR_CART':\r\n      return {\r\n        ...state,\r\n        items: []\r\n      };\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const CartProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(cartReducer, { items: [] });\r\n  const { addToast } = useToast();\r\n\r\n  // Using mock data instead of API calls\r\n  // TODO: Replace with API calls when backend is ready\r\n\r\n  /**\r\n   * Add product to cart (Mock implementation)\r\n   * @param {Object} product - Product to add\r\n   */\r\n  const addToCart = (product) => {\r\n    dispatch({ type: 'ADD_TO_CART', payload: product });\r\n    addToast(`${product.name} added to cart`, 'success');\r\n  };\r\n\r\n  /**\r\n   * Remove product from cart (Mock implementation)\r\n   * @param {string|number} productId - Product ID to remove\r\n   */\r\n  const removeFromCart = (productId) => {\r\n    const item = state.items.find(item => item.id === productId);\r\n    dispatch({ type: 'REMOVE_FROM_CART', payload: productId });\r\n    if (item) {\r\n      addToast(`${item.name} removed from cart`, 'error');\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Update product quantity in cart (Mock implementation)\r\n   * @param {string|number} productId - Product ID\r\n   * @param {number} quantity - New quantity\r\n   */\r\n  const updateQuantity = (productId, quantity) => {\r\n    dispatch({ type: 'UPDATE_QUANTITY', payload: { id: productId, quantity } });\r\n  };\r\n\r\n  /**\r\n   * Clear entire cart (Mock implementation)\r\n   */\r\n  const clearCart = () => {\r\n    dispatch({ type: 'CLEAR_CART' });\r\n    addToast('Cart cleared', 'error');\r\n  };\r\n\r\n  const getTotalPrice = () => {\r\n    return state.items.reduce((total, item) => total + (item.price * item.quantity), 0);\r\n  };\r\n\r\n  const getTotalItems = () => {\r\n    return state.items.reduce((total, item) => total + item.quantity, 0);\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={{\r\n      items: state.items,\r\n      addToCart,\r\n      removeFromCart,\r\n      updateQuantity,\r\n      clearCart,\r\n      getTotalPrice,\r\n      getTotalItems\r\n    }}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useCart = () => {\r\n  const context = useContext(CartContext);\r\n  if (!context) {\r\n    throw new Error('useCart must be used within a CartProvider');\r\n  }\r\n  return context;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}